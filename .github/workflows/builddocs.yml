
name: Build docs

on:
  push:
    branches: [ 'doc/*', 'docs/*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ master, 'maint/*' ]

  create:
    tags: [ '*' ]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Determine current branch/tag name
      run: |
        if [[ "$GITHUB_REF" == refs/tags/* ]]; then
          CURBRANCH=${GITHUB_REF##*/}
        elif [[ "$GITHUB_REF" == refs/pull/* ]]; then
          CURBRANCH=${GITHUB_REF%/*}
          CURBRANCH=${CURBRANCH##*/}
        elif [[ "$GITHUB_REF" == refs/heads/* ]]; then
          CURBRANCH=${GITHUB_REF##*/}
        fi

        # Remove forward slashes
        CURBRANCH=$( echo $CURBRANCH | sed 's+/+_+g' )
        echo "Building branch/tag ${CURBRANCH:-<unkwown>}, from git ref <$GITHUB_REF>"
        echo "CURBRANCH=${CURBRANCH}" >> ${GITHUB_ENV}

    - name: Install GraphViz
      run: |
        sudo apt-get update -y
        sudo apt-get install -y graphviz

    - name: Install dependencies
      run: |
        pip install -r docs/requirements.txt

    - name: Build docs
      run: |
          make -C docs/ SPHINXOPTS="-W" BUILDDIR="$HOME/docs" CURBRANCH="${CURBRANCH:-html}" html

    - name: Push created tag to gh-pages
      if: github.event_name == 'create'
      run: |
          MAJOR_MINOR=${CURBRANCH%.*}
          if [[ "${MAJOR_MINOR" == "" ]]; then
              echo "Could not identify release series"
              exit 1
          fi
          git checkout gh-pages
          git pull
          git rm -r ${MAJOR_MINOR}/
          # It is fundamental that the directory does not exist at all.
          rm -rf ${MAJOR_MINOR}
          cp -r $HOME/docs/$CURBRANCH $PWD/${MAJOR_MINOR}
          git commit -am "rel(${CURBRANCH}): Update docs of ${MAJOR_MINOR} series" || true
          git push

    - name: Push merge commit into master to gh-pages
      if: github.event.pull_request.merged == true
      run: |
          if [[ "${CURBRANCH" != "master" ]]; then
              echo "$CURBRANCH is not the default development branch"
              exit 1
          fi
          git checkout gh-pages
          git pull
          git rm -r master/
          # It is fundamental that the directory does not exist at all.
          rm -rf master
          cp -r $HOME/docs/$CURBRANCH $PWD/master
          git commit -am "docs(master): Update docs of development line" || true
          git push
